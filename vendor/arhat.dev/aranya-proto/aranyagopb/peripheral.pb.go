// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: peripheral.proto

// +build !noperipheral

package aranyagopb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PeripheralType int32

const (
	// unknown type of peripheral
	_INVALID_PERIPHERAL_TYPE PeripheralType = 0
	// a normal peripheral for physical operations (e.g. sensor, cam)
	PERIPHERAL_TYPE_NORMAL PeripheralType = 1
	// a reporter peripheral is used to report metrics
	PERIPHERAL_TYPE_METRICS_REPORTER PeripheralType = 2
)

var PeripheralType_name = map[int32]string{
	0: "_INVALID_PERIPHERAL_TYPE",
	1: "PERIPHERAL_TYPE_NORMAL",
	2: "PERIPHERAL_TYPE_METRICS_REPORTER",
}

var PeripheralType_value = map[string]int32{
	"_INVALID_PERIPHERAL_TYPE":         0,
	"PERIPHERAL_TYPE_NORMAL":           1,
	"PERIPHERAL_TYPE_METRICS_REPORTER": 2,
}

func (PeripheralType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8f764f7e9651e8ed, []int{0}
}

func init() {
	proto.RegisterEnum("aranya.PeripheralType", PeripheralType_name, PeripheralType_value)
}

func init() { proto.RegisterFile("peripheral.proto", fileDescriptor_8f764f7e9651e8ed) }

var fileDescriptor_8f764f7e9651e8ed = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x48, 0x2d, 0xca,
	0x2c, 0xc8, 0x48, 0x2d, 0x4a, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0x2c,
	0x4a, 0xcc, 0xab, 0x4c, 0xd4, 0x2a, 0xe0, 0xe2, 0x0b, 0x80, 0xcb, 0x85, 0x54, 0x16, 0xa4, 0x0a,
	0xc9, 0x70, 0x49, 0xc4, 0x7b, 0xfa, 0x85, 0x39, 0xfa, 0x78, 0xba, 0xc4, 0x07, 0xb8, 0x06, 0x79,
	0x06, 0x78, 0xb8, 0x06, 0x39, 0xfa, 0xc4, 0x87, 0x44, 0x06, 0xb8, 0x0a, 0x30, 0x08, 0x49, 0x71,
	0x89, 0xa1, 0x09, 0xc6, 0xfb, 0xf9, 0x07, 0xf9, 0x3a, 0xfa, 0x08, 0x30, 0x0a, 0xa9, 0x70, 0x29,
	0xa0, 0xcb, 0xf9, 0xba, 0x86, 0x04, 0x79, 0x3a, 0x07, 0xc7, 0x07, 0xb9, 0x06, 0xf8, 0x07, 0x85,
	0xb8, 0x06, 0x09, 0x30, 0x39, 0x85, 0x5f, 0x78, 0x28, 0xc7, 0x70, 0xe3, 0xa1, 0x1c, 0xc3, 0x87,
	0x87, 0x72, 0x8c, 0x0d, 0x8f, 0xe4, 0x18, 0x57, 0x3c, 0x92, 0x63, 0x3c, 0xf1, 0x48, 0x8e, 0xf1,
	0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x5f, 0x3c, 0x92, 0x63, 0xf8, 0xf0, 0x48, 0x8e,
	0x71, 0xc2, 0x63, 0x39, 0x86, 0x0b, 0x8f, 0xe5, 0x18, 0x6e, 0x3c, 0x96, 0x63, 0x88, 0x52, 0x4c,
	0x2c, 0xca, 0x48, 0x2c, 0xd1, 0x4b, 0x49, 0x2d, 0xd3, 0x87, 0xb8, 0x5c, 0x17, 0xec, 0x0f, 0x28,
	0x27, 0x3d, 0xbf, 0x20, 0x29, 0x89, 0x0d, 0x2c, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x04,
	0x02, 0xac, 0x1e, 0xed, 0x00, 0x00, 0x00,
}

func (x PeripheralType) String() string {
	s, ok := PeripheralType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
