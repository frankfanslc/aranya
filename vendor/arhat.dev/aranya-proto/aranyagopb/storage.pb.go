// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage.proto

// +build !nostorage

package aranyagopb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StorageState int32

const (
	STORAGE_STATE_UNKONW    StorageState = 0
	STORAGE_STATE_UNMOUNTED StorageState = 1
	STORAGE_STATE_MOUNTED   StorageState = 2
)

var StorageState_name = map[int32]string{
	0: "STORAGE_STATE_UNKONW",
	1: "STORAGE_STATE_UNMOUNTED",
	2: "STORAGE_STATE_MOUNTED",
}

var StorageState_value = map[string]int32{
	"STORAGE_STATE_UNKONW":    0,
	"STORAGE_STATE_UNMOUNTED": 1,
	"STORAGE_STATE_MOUNTED":   2,
}

func (StorageState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

type StorageListCmd struct {
}

func (m *StorageListCmd) Reset()      { *m = StorageListCmd{} }
func (*StorageListCmd) ProtoMessage() {}
func (*StorageListCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}
func (m *StorageListCmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageListCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageListCmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageListCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageListCmd.Merge(m, src)
}
func (m *StorageListCmd) XXX_Size() int {
	return m.Size()
}
func (m *StorageListCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageListCmd.DiscardUnknown(m)
}

var xxx_messageInfo_StorageListCmd proto.InternalMessageInfo

type StorageEnsureCmd struct {
	RemotePath string `protobuf:"bytes,1,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	LocalPath  string `protobuf:"bytes,2,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
}

func (m *StorageEnsureCmd) Reset()      { *m = StorageEnsureCmd{} }
func (*StorageEnsureCmd) ProtoMessage() {}
func (*StorageEnsureCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}
func (m *StorageEnsureCmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageEnsureCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageEnsureCmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageEnsureCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageEnsureCmd.Merge(m, src)
}
func (m *StorageEnsureCmd) XXX_Size() int {
	return m.Size()
}
func (m *StorageEnsureCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageEnsureCmd.DiscardUnknown(m)
}

var xxx_messageInfo_StorageEnsureCmd proto.InternalMessageInfo

func (m *StorageEnsureCmd) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *StorageEnsureCmd) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

type StorageDeleteCmd struct {
	RemotePath string `protobuf:"bytes,1,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	LocalPath  string `protobuf:"bytes,2,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
}

func (m *StorageDeleteCmd) Reset()      { *m = StorageDeleteCmd{} }
func (*StorageDeleteCmd) ProtoMessage() {}
func (*StorageDeleteCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}
func (m *StorageDeleteCmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageDeleteCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageDeleteCmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageDeleteCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageDeleteCmd.Merge(m, src)
}
func (m *StorageDeleteCmd) XXX_Size() int {
	return m.Size()
}
func (m *StorageDeleteCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageDeleteCmd.DiscardUnknown(m)
}

var xxx_messageInfo_StorageDeleteCmd proto.InternalMessageInfo

func (m *StorageDeleteCmd) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *StorageDeleteCmd) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

type StorageStatusMsg struct {
	State      StorageState `protobuf:"varint,1,opt,name=state,proto3,enum=aranya.StorageState" json:"state,omitempty"`
	RemotePath string       `protobuf:"bytes,2,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	MountPoint string       `protobuf:"bytes,3,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
}

func (m *StorageStatusMsg) Reset()      { *m = StorageStatusMsg{} }
func (*StorageStatusMsg) ProtoMessage() {}
func (*StorageStatusMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}
func (m *StorageStatusMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageStatusMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageStatusMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageStatusMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageStatusMsg.Merge(m, src)
}
func (m *StorageStatusMsg) XXX_Size() int {
	return m.Size()
}
func (m *StorageStatusMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageStatusMsg.DiscardUnknown(m)
}

var xxx_messageInfo_StorageStatusMsg proto.InternalMessageInfo

func (m *StorageStatusMsg) GetState() StorageState {
	if m != nil {
		return m.State
	}
	return STORAGE_STATE_UNKONW
}

func (m *StorageStatusMsg) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *StorageStatusMsg) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

type StorageStatusListMsg struct {
	Storages []*StorageStatusMsg `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
}

func (m *StorageStatusListMsg) Reset()      { *m = StorageStatusListMsg{} }
func (*StorageStatusListMsg) ProtoMessage() {}
func (*StorageStatusListMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{4}
}
func (m *StorageStatusListMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageStatusListMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageStatusListMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageStatusListMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageStatusListMsg.Merge(m, src)
}
func (m *StorageStatusListMsg) XXX_Size() int {
	return m.Size()
}
func (m *StorageStatusListMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageStatusListMsg.DiscardUnknown(m)
}

var xxx_messageInfo_StorageStatusListMsg proto.InternalMessageInfo

func (m *StorageStatusListMsg) GetStorages() []*StorageStatusMsg {
	if m != nil {
		return m.Storages
	}
	return nil
}

func init() {
	proto.RegisterEnum("aranya.StorageState", StorageState_name, StorageState_value)
	proto.RegisterType((*StorageListCmd)(nil), "aranya.StorageListCmd")
	proto.RegisterType((*StorageEnsureCmd)(nil), "aranya.StorageEnsureCmd")
	proto.RegisterType((*StorageDeleteCmd)(nil), "aranya.StorageDeleteCmd")
	proto.RegisterType((*StorageStatusMsg)(nil), "aranya.StorageStatusMsg")
	proto.RegisterType((*StorageStatusListMsg)(nil), "aranya.StorageStatusListMsg")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x6a, 0xea, 0x40,
	0x18, 0xc5, 0x33, 0xca, 0x95, 0xeb, 0xe7, 0xbd, 0x12, 0x82, 0xa5, 0x29, 0xa5, 0xa3, 0x75, 0x25,
	0x42, 0x53, 0xb0, 0x7d, 0x01, 0xab, 0xa1, 0x8b, 0xfa, 0x8f, 0x24, 0x22, 0x74, 0x93, 0x8e, 0x75,
	0x50, 0xc1, 0x64, 0x42, 0x32, 0x16, 0xba, 0xf3, 0x11, 0xfa, 0x18, 0x7d, 0x94, 0x2e, 0x5d, 0xba,
	0xac, 0x71, 0xd3, 0xa5, 0x8f, 0x50, 0x92, 0xb1, 0xa2, 0xb6, 0xcb, 0x2e, 0x73, 0x7e, 0x87, 0xc3,
	0x6f, 0x3e, 0x02, 0xff, 0x03, 0xce, 0x7c, 0x32, 0xa4, 0x9a, 0xe7, 0x33, 0xce, 0x94, 0x14, 0xf1,
	0x89, 0xfb, 0x4c, 0x8a, 0x32, 0x64, 0x4d, 0x01, 0x1a, 0xe3, 0x80, 0xd7, 0x9c, 0x41, 0xd1, 0x00,
	0x79, 0x93, 0xe8, 0x6e, 0x30, 0xf5, 0x69, 0xcd, 0x19, 0x28, 0x79, 0xc8, 0xf8, 0xd4, 0x61, 0x9c,
	0xda, 0x1e, 0xe1, 0x23, 0x15, 0x15, 0x50, 0x29, 0x6d, 0x80, 0x88, 0x3a, 0x84, 0x8f, 0x94, 0x33,
	0x80, 0x09, 0x7b, 0x24, 0x13, 0xc1, 0x13, 0x31, 0x4f, 0xc7, 0x49, 0x84, 0x77, 0x36, 0xeb, 0x74,
	0x42, 0xf9, 0xaf, 0x6c, 0xce, 0xd0, 0x76, 0xd4, 0xe4, 0x84, 0x4f, 0x83, 0x66, 0x30, 0x54, 0xca,
	0xf0, 0x27, 0xe0, 0x84, 0xd3, 0x78, 0x2e, 0x5b, 0xc9, 0x69, 0xe2, 0x99, 0xda, 0x4e, 0x91, 0x1a,
	0xa2, 0x72, 0x28, 0x90, 0xf8, 0x26, 0x90, 0x87, 0x8c, 0xc3, 0xa6, 0x2e, 0xb7, 0x3d, 0x36, 0x76,
	0xb9, 0x9a, 0x14, 0x85, 0x38, 0xea, 0x44, 0x49, 0xb1, 0x01, 0xb9, 0x3d, 0x83, 0xe8, 0x84, 0x91,
	0xc5, 0x35, 0xfc, 0xdd, 0x5c, 0x3b, 0x50, 0x51, 0x21, 0x59, 0xca, 0x54, 0xd4, 0x1f, 0x44, 0x62,
	0x63, 0x63, 0xdb, 0x2c, 0x3f, 0xc0, 0xbf, 0x5d, 0x4d, 0x45, 0x85, 0x9c, 0x69, 0xb5, 0x8d, 0xea,
	0xad, 0x6e, 0x9b, 0x56, 0xd5, 0xd2, 0xed, 0x6e, 0xeb, 0xae, 0xdd, 0xea, 0xc9, 0x92, 0x72, 0x0a,
	0xc7, 0x87, 0xa4, 0xd9, 0xee, 0xb6, 0x2c, 0xbd, 0x2e, 0x23, 0xe5, 0x04, 0x8e, 0xf6, 0xe1, 0x17,
	0x4a, 0xdc, 0xf4, 0xe6, 0x4b, 0x2c, 0x2d, 0x96, 0x58, 0x5a, 0x2f, 0x31, 0x9a, 0x85, 0x18, 0xbd,
	0x86, 0x18, 0xbd, 0x85, 0x18, 0xcd, 0x43, 0x8c, 0xde, 0x43, 0x8c, 0x3e, 0x42, 0x2c, 0xad, 0x43,
	0x8c, 0x5e, 0x56, 0x58, 0x9a, 0xaf, 0xb0, 0xb4, 0x58, 0x61, 0xe9, 0xfe, 0x9c, 0xf8, 0x23, 0xc2,
	0xb5, 0x01, 0x7d, 0xba, 0x14, 0x8f, 0xb8, 0x88, 0x7f, 0xa1, 0xcd, 0xc7, 0x90, 0x79, 0xfd, 0x7e,
	0x2a, 0x4e, 0xae, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x98, 0xf6, 0x0c, 0x0c, 0x65, 0x02, 0x00,
	0x00,
}

func (x StorageState) String() string {
	s, ok := StorageState_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *StorageListCmd) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageListCmd)
	if !ok {
		that2, ok := that.(StorageListCmd)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *StorageEnsureCmd) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageEnsureCmd)
	if !ok {
		that2, ok := that.(StorageEnsureCmd)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RemotePath != that1.RemotePath {
		return false
	}
	if this.LocalPath != that1.LocalPath {
		return false
	}
	return true
}
func (this *StorageDeleteCmd) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageDeleteCmd)
	if !ok {
		that2, ok := that.(StorageDeleteCmd)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RemotePath != that1.RemotePath {
		return false
	}
	if this.LocalPath != that1.LocalPath {
		return false
	}
	return true
}
func (this *StorageStatusMsg) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageStatusMsg)
	if !ok {
		that2, ok := that.(StorageStatusMsg)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.State != that1.State {
		return false
	}
	if this.RemotePath != that1.RemotePath {
		return false
	}
	if this.MountPoint != that1.MountPoint {
		return false
	}
	return true
}
func (this *StorageStatusListMsg) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StorageStatusListMsg)
	if !ok {
		that2, ok := that.(StorageStatusListMsg)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Storages) != len(that1.Storages) {
		return false
	}
	for i := range this.Storages {
		if !this.Storages[i].Equal(that1.Storages[i]) {
			return false
		}
	}
	return true
}
func (this *StorageListCmd) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&aranyagopb.StorageListCmd{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StorageEnsureCmd) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&aranyagopb.StorageEnsureCmd{")
	s = append(s, "RemotePath: "+fmt.Sprintf("%#v", this.RemotePath)+",\n")
	s = append(s, "LocalPath: "+fmt.Sprintf("%#v", this.LocalPath)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StorageDeleteCmd) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&aranyagopb.StorageDeleteCmd{")
	s = append(s, "RemotePath: "+fmt.Sprintf("%#v", this.RemotePath)+",\n")
	s = append(s, "LocalPath: "+fmt.Sprintf("%#v", this.LocalPath)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StorageStatusMsg) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&aranyagopb.StorageStatusMsg{")
	s = append(s, "State: "+fmt.Sprintf("%#v", this.State)+",\n")
	s = append(s, "RemotePath: "+fmt.Sprintf("%#v", this.RemotePath)+",\n")
	s = append(s, "MountPoint: "+fmt.Sprintf("%#v", this.MountPoint)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StorageStatusListMsg) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&aranyagopb.StorageStatusListMsg{")
	if this.Storages != nil {
		s = append(s, "Storages: "+fmt.Sprintf("%#v", this.Storages)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringStorage(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *StorageListCmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageListCmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageListCmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *StorageEnsureCmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageEnsureCmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageEnsureCmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LocalPath) > 0 {
		i -= len(m.LocalPath)
		copy(dAtA[i:], m.LocalPath)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.LocalPath)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RemotePath) > 0 {
		i -= len(m.RemotePath)
		copy(dAtA[i:], m.RemotePath)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.RemotePath)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StorageDeleteCmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageDeleteCmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageDeleteCmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LocalPath) > 0 {
		i -= len(m.LocalPath)
		copy(dAtA[i:], m.LocalPath)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.LocalPath)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RemotePath) > 0 {
		i -= len(m.RemotePath)
		copy(dAtA[i:], m.RemotePath)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.RemotePath)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StorageStatusMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageStatusMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageStatusMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MountPoint) > 0 {
		i -= len(m.MountPoint)
		copy(dAtA[i:], m.MountPoint)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.MountPoint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RemotePath) > 0 {
		i -= len(m.RemotePath)
		copy(dAtA[i:], m.RemotePath)
		i = encodeVarintStorage(dAtA, i, uint64(len(m.RemotePath)))
		i--
		dAtA[i] = 0x12
	}
	if m.State != 0 {
		i = encodeVarintStorage(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StorageStatusListMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageStatusListMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageStatusListMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Storages) > 0 {
		for iNdEx := len(m.Storages) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Storages[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintStorage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintStorage(dAtA []byte, offset int, v uint64) int {
	offset -= sovStorage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StorageListCmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *StorageEnsureCmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RemotePath)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	l = len(m.LocalPath)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	return n
}

func (m *StorageDeleteCmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RemotePath)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	l = len(m.LocalPath)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	return n
}

func (m *StorageStatusMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovStorage(uint64(m.State))
	}
	l = len(m.RemotePath)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	l = len(m.MountPoint)
	if l > 0 {
		n += 1 + l + sovStorage(uint64(l))
	}
	return n
}

func (m *StorageStatusListMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Storages) > 0 {
		for _, e := range m.Storages {
			l = e.Size()
			n += 1 + l + sovStorage(uint64(l))
		}
	}
	return n
}

func sovStorage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStorage(x uint64) (n int) {
	return sovStorage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *StorageListCmd) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StorageListCmd{`,
		`}`,
	}, "")
	return s
}
func (this *StorageEnsureCmd) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StorageEnsureCmd{`,
		`RemotePath:` + fmt.Sprintf("%v", this.RemotePath) + `,`,
		`LocalPath:` + fmt.Sprintf("%v", this.LocalPath) + `,`,
		`}`,
	}, "")
	return s
}
func (this *StorageDeleteCmd) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StorageDeleteCmd{`,
		`RemotePath:` + fmt.Sprintf("%v", this.RemotePath) + `,`,
		`LocalPath:` + fmt.Sprintf("%v", this.LocalPath) + `,`,
		`}`,
	}, "")
	return s
}
func (this *StorageStatusMsg) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StorageStatusMsg{`,
		`State:` + fmt.Sprintf("%v", this.State) + `,`,
		`RemotePath:` + fmt.Sprintf("%v", this.RemotePath) + `,`,
		`MountPoint:` + fmt.Sprintf("%v", this.MountPoint) + `,`,
		`}`,
	}, "")
	return s
}
func (this *StorageStatusListMsg) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForStorages := "[]*StorageStatusMsg{"
	for _, f := range this.Storages {
		repeatedStringForStorages += strings.Replace(f.String(), "StorageStatusMsg", "StorageStatusMsg", 1) + ","
	}
	repeatedStringForStorages += "}"
	s := strings.Join([]string{`&StorageStatusListMsg{`,
		`Storages:` + repeatedStringForStorages + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringStorage(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *StorageListCmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageListCmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageListCmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StorageEnsureCmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageEnsureCmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageEnsureCmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemotePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemotePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StorageDeleteCmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageDeleteCmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageDeleteCmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemotePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemotePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StorageStatusMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageStatusMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageStatusMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= StorageState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemotePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemotePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MountPoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MountPoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StorageStatusListMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageStatusListMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageStatusListMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Storages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStorage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStorage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Storages = append(m.Storages, &StorageStatusMsg{})
			if err := m.Storages[len(m.Storages)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStorage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStorage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStorage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStorage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStorage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStorage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStorage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStorage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStorage = fmt.Errorf("proto: unexpected end of group")
)
